//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace A_AAsesoresAPI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AAAsesoresEntities : DbContext
    {
        public AAAsesoresEntities()
            : base("name=AAAsesoresEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Appointment> Appointment { get; set; }
        public virtual DbSet<AuditLog> AuditLog { get; set; }
        public virtual DbSet<Canton> Canton { get; set; }
        public virtual DbSet<Contact> Contact { get; set; }
        public virtual DbSet<Currency> Currency { get; set; }
        public virtual DbSet<District> District { get; set; }
        public virtual DbSet<DocumentType> DocumentType { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<ErrorLog> ErrorLog { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<Property> Property { get; set; }
        public virtual DbSet<PropertyAddress> PropertyAddress { get; set; }
        public virtual DbSet<PropertyDoc> PropertyDoc { get; set; }
        public virtual DbSet<PropertyImg> PropertyImg { get; set; }
        public virtual DbSet<PropertyType> PropertyType { get; set; }
        public virtual DbSet<Province> Province { get; set; }
        public virtual DbSet<Quote> Quote { get; set; }
        public virtual DbSet<QuoteDetailsPerRoom> QuoteDetailsPerRoom { get; set; }
        public virtual DbSet<QuoteRooms> QuoteRooms { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<TransactionType> TransactionType { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<VirtualAssistant> VirtualAssistant { get; set; }
    
        public virtual int AddDocUrlToQuote(Nullable<int> quoteId, string docUrl)
        {
            var quoteIdParameter = quoteId.HasValue ?
                new ObjectParameter("QuoteId", quoteId) :
                new ObjectParameter("QuoteId", typeof(int));
    
            var docUrlParameter = docUrl != null ?
                new ObjectParameter("DocUrl", docUrl) :
                new ObjectParameter("DocUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDocUrlToQuote", quoteIdParameter, docUrlParameter);
        }
    
        public virtual int ChangeAppointmentStatus(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeAppointmentStatus", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ChangeCantonStatusSP(Nullable<int> cantonId)
        {
            var cantonIdParameter = cantonId.HasValue ?
                new ObjectParameter("CantonId", cantonId) :
                new ObjectParameter("CantonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ChangeCantonStatusSP", cantonIdParameter);
        }
    
        public virtual int ChangeContactStatusSP(Nullable<int> contactId)
        {
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("ContactId", contactId) :
                new ObjectParameter("ContactId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeContactStatusSP", contactIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ChangeDistrictStatusSP(Nullable<int> districtId)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ChangeDistrictStatusSP", districtIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ChangeDocumentTypeStatusSP(Nullable<int> documentTypeId)
        {
            var documentTypeIdParameter = documentTypeId.HasValue ?
                new ObjectParameter("DocumentTypeId", documentTypeId) :
                new ObjectParameter("DocumentTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ChangeDocumentTypeStatusSP", documentTypeIdParameter);
        }
    
        public virtual int ChangeEmployeeStatusSP(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeEmployeeStatusSP", userIdParameter);
        }
    
        public virtual int ChangePasswordSP(string identification, string password)
        {
            var identificationParameter = identification != null ?
                new ObjectParameter("Identification", identification) :
                new ObjectParameter("Identification", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangePasswordSP", identificationParameter, passwordParameter);
        }
    
        public virtual int ChangePropertyStatusSP(Nullable<int> propertyId)
        {
            var propertyIdParameter = propertyId.HasValue ?
                new ObjectParameter("PropertyId", propertyId) :
                new ObjectParameter("PropertyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangePropertyStatusSP", propertyIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ChangePropertyTypeStatusSP(Nullable<int> propertyTypeId)
        {
            var propertyTypeIdParameter = propertyTypeId.HasValue ?
                new ObjectParameter("PropertyTypeId", propertyTypeId) :
                new ObjectParameter("PropertyTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ChangePropertyTypeStatusSP", propertyTypeIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ChangeProvinceStatusSP(Nullable<int> provinceId)
        {
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ChangeProvinceStatusSP", provinceIdParameter);
        }
    
        public virtual int ChangeQuoteStatusSP(Nullable<int> quoteId)
        {
            var quoteIdParameter = quoteId.HasValue ?
                new ObjectParameter("QuoteId", quoteId) :
                new ObjectParameter("QuoteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeQuoteStatusSP", quoteIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ChangeRoleStatusSP(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ChangeRoleStatusSP", roleIdParameter);
        }
    
        public virtual int ChangeRoomStatusSP(Nullable<int> roomId)
        {
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("RoomId", roomId) :
                new ObjectParameter("RoomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeRoomStatusSP", roomIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ChangeStatusStatusSP(Nullable<int> statusId)
        {
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ChangeStatusStatusSP", statusIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ChangeTransactionTypeStatusSP(Nullable<int> transactionTypeId)
        {
            var transactionTypeIdParameter = transactionTypeId.HasValue ?
                new ObjectParameter("TransactionTypeId", transactionTypeId) :
                new ObjectParameter("TransactionTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ChangeTransactionTypeStatusSP", transactionTypeIdParameter);
        }
    
        public virtual int DeleteAuditLogSP(Nullable<int> auditLogId)
        {
            var auditLogIdParameter = auditLogId.HasValue ?
                new ObjectParameter("AuditLogId", auditLogId) :
                new ObjectParameter("AuditLogId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAuditLogSP", auditLogIdParameter);
        }
    
        public virtual int DeleteCurrencySP(Nullable<int> currencyId)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCurrencySP", currencyIdParameter);
        }
    
        public virtual int DeleteDocumentTypeSP(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDocumentTypeSP", idParameter);
        }
    
        public virtual int DeleteDocUrlFromQuote(Nullable<int> quoteId)
        {
            var quoteIdParameter = quoteId.HasValue ?
                new ObjectParameter("QuoteId", quoteId) :
                new ObjectParameter("QuoteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDocUrlFromQuote", quoteIdParameter);
        }
    
        public virtual int DeleteEmployeeSP(Nullable<int> employeeId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmployeeSP", employeeIdParameter);
        }
    
        public virtual int DeleteNewsSP(Nullable<int> newsId)
        {
            var newsIdParameter = newsId.HasValue ?
                new ObjectParameter("NewsId", newsId) :
                new ObjectParameter("NewsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteNewsSP", newsIdParameter);
        }
    
        public virtual int DeletePropertyAddressSP(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePropertyAddressSP", idParameter);
        }
    
        public virtual int DeletePropertyDocSP(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePropertyDocSP", idParameter);
        }
    
        public virtual int DeletePropertyImgSP(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePropertyImgSP", idParameter);
        }
    
        public virtual int DeletePropertySP(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePropertySP", idParameter);
        }
    
        public virtual int DeletePropertyTypeSP(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePropertyTypeSP", idParameter);
        }
    
        public virtual int DeleteQuoteRoomSP(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteQuoteRoomSP", idParameter);
        }
    
        public virtual int DeleteRoleSP(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRoleSP", roleIdParameter);
        }
    
        public virtual int DeleteStatusSP(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStatusSP", idParameter);
        }
    
        public virtual int DeleteTransactionTypeSP(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTransactionTypeSP", idParameter);
        }
    
        public virtual int DeleteUserSP(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUserSP", userIdParameter);
        }
    
        public virtual int EditCantonSP(Nullable<int> id, string name, Nullable<int> provinceId, Nullable<bool> isActive)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditCantonSP", idParameter, nameParameter, provinceIdParameter, isActiveParameter);
        }
    
        public virtual int EditDistrictSP(Nullable<int> id, string name, Nullable<int> cantonId, Nullable<bool> isActive)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var cantonIdParameter = cantonId.HasValue ?
                new ObjectParameter("CantonId", cantonId) :
                new ObjectParameter("CantonId", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditDistrictSP", idParameter, nameParameter, cantonIdParameter, isActiveParameter);
        }
    
        public virtual int EditProvinceSP(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditProvinceSP", idParameter, nameParameter);
        }
    
        public virtual ObjectResult<ForgetPasswordSP_Result> ForgetPasswordSP(string identification, string password, Nullable<bool> isTemporary)
        {
            var identificationParameter = identification != null ?
                new ObjectParameter("Identification", identification) :
                new ObjectParameter("Identification", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var isTemporaryParameter = isTemporary.HasValue ?
                new ObjectParameter("IsTemporary", isTemporary) :
                new ObjectParameter("IsTemporary", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ForgetPasswordSP_Result>("ForgetPasswordSP", identificationParameter, passwordParameter, isTemporaryParameter);
        }
    
        public virtual ObjectResult<GetAllAppoinmentsSP_Result> GetAllAppoinmentsSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAppoinmentsSP_Result>("GetAllAppoinmentsSP");
        }
    
        public virtual ObjectResult<GetAllAuditLogSP_Result> GetAllAuditLogSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAuditLogSP_Result>("GetAllAuditLogSP");
        }
    
        public virtual ObjectResult<GetAllCantonsSP_Result> GetAllCantonsSP(Nullable<int> provinceId)
        {
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCantonsSP_Result>("GetAllCantonsSP", provinceIdParameter);
        }
    
        public virtual ObjectResult<GetAllClientsSP_Result> GetAllClientsSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllClientsSP_Result>("GetAllClientsSP");
        }
    
        public virtual ObjectResult<GetAllCurrenciesSP_Result> GetAllCurrenciesSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCurrenciesSP_Result>("GetAllCurrenciesSP");
        }
    
        public virtual ObjectResult<GetAllDistrictsSP_Result> GetAllDistrictsSP(Nullable<int> cantonId)
        {
            var cantonIdParameter = cantonId.HasValue ?
                new ObjectParameter("CantonId", cantonId) :
                new ObjectParameter("CantonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDistrictsSP_Result>("GetAllDistrictsSP", cantonIdParameter);
        }
    
        public virtual ObjectResult<GetAllDocumentTypeSP_Result> GetAllDocumentTypeSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDocumentTypeSP_Result>("GetAllDocumentTypeSP");
        }
    
        public virtual ObjectResult<GetAllEmployeesSP_Result> GetAllEmployeesSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEmployeesSP_Result>("GetAllEmployeesSP");
        }
    
        public virtual ObjectResult<GetAllNewsSP_Result> GetAllNewsSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllNewsSP_Result>("GetAllNewsSP");
        }
    
        public virtual ObjectResult<GetAllPropertiesSP_Result> GetAllPropertiesSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertiesSP_Result>("GetAllPropertiesSP");
        }
    
        public virtual ObjectResult<GetAllPropertyAddressSP_Result> GetAllPropertyAddressSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyAddressSP_Result>("GetAllPropertyAddressSP");
        }
    
        public virtual ObjectResult<GetAllPropertyDocsSP_Result> GetAllPropertyDocsSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyDocsSP_Result>("GetAllPropertyDocsSP");
        }
    
        public virtual ObjectResult<GetAllPropertyImgsSP_Result> GetAllPropertyImgsSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyImgsSP_Result>("GetAllPropertyImgsSP");
        }
    
        public virtual ObjectResult<GetAllPropertyTypesSP_Result> GetAllPropertyTypesSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyTypesSP_Result>("GetAllPropertyTypesSP");
        }
    
        public virtual ObjectResult<GetAllProvincesSP_Result> GetAllProvincesSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProvincesSP_Result>("GetAllProvincesSP");
        }
    
        public virtual ObjectResult<GetAllRoleSP_Result> GetAllRoleSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRoleSP_Result>("GetAllRoleSP");
        }
    
        public virtual ObjectResult<GetAllStatusSP_Result> GetAllStatusSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllStatusSP_Result>("GetAllStatusSP");
        }
    
        public virtual ObjectResult<GetAllTransactionTypesSP_Result> GetAllTransactionTypesSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTransactionTypesSP_Result>("GetAllTransactionTypesSP");
        }
    
        public virtual ObjectResult<GetAllUsersSP_Result> GetAllUsersSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllUsersSP_Result>("GetAllUsersSP");
        }
    
        public virtual ObjectResult<GetAppointmentSP_Result> GetAppointmentSP(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAppointmentSP_Result>("GetAppointmentSP", idParameter);
        }
    
        public virtual ObjectResult<GetAppointmentStatusesSP_Result> GetAppointmentStatusesSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAppointmentStatusesSP_Result>("GetAppointmentStatusesSP");
        }
    
        public virtual ObjectResult<GetCantonByIdSP_Result> GetCantonByIdSP(Nullable<int> cantonId)
        {
            var cantonIdParameter = cantonId.HasValue ?
                new ObjectParameter("CantonId", cantonId) :
                new ObjectParameter("CantonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCantonByIdSP_Result>("GetCantonByIdSP", cantonIdParameter);
        }
    
        public virtual ObjectResult<GetCantonsSP_Result> GetCantonsSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCantonsSP_Result>("GetCantonsSP");
        }
    
        public virtual ObjectResult<GetContactsSP_Result> GetContactsSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContactsSP_Result>("GetContactsSP");
        }
    
        public virtual ObjectResult<GetCurrencyByIdSP_Result> GetCurrencyByIdSP(Nullable<int> currencyId)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCurrencyByIdSP_Result>("GetCurrencyByIdSP", currencyIdParameter);
        }
    
        public virtual ObjectResult<GetDistrictByIdSP_Result> GetDistrictByIdSP(Nullable<int> districtId)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistrictByIdSP_Result>("GetDistrictByIdSP", districtIdParameter);
        }
    
        public virtual ObjectResult<GetDistrictsSP_Result> GetDistrictsSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistrictsSP_Result>("GetDistrictsSP");
        }
    
        public virtual ObjectResult<GetDocumentTypeByIdSP_Result> GetDocumentTypeByIdSP(Nullable<int> documentTypeId)
        {
            var documentTypeIdParameter = documentTypeId.HasValue ?
                new ObjectParameter("DocumentTypeId", documentTypeId) :
                new ObjectParameter("DocumentTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDocumentTypeByIdSP_Result>("GetDocumentTypeByIdSP", documentTypeIdParameter);
        }
    
        public virtual ObjectResult<GetDocumentTypeSP_Result> GetDocumentTypeSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDocumentTypeSP_Result>("GetDocumentTypeSP");
        }
    
        public virtual ObjectResult<GetEmployeeByIdentificationSP_Result> GetEmployeeByIdentificationSP(string identification)
        {
            var identificationParameter = identification != null ?
                new ObjectParameter("Identification", identification) :
                new ObjectParameter("Identification", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeByIdentificationSP_Result>("GetEmployeeByIdentificationSP", identificationParameter);
        }
    
        public virtual ObjectResult<GetEmployeeInfoByRoleAndStatus_Result> GetEmployeeInfoByRoleAndStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeInfoByRoleAndStatus_Result>("GetEmployeeInfoByRoleAndStatus");
        }
    
        public virtual ObjectResult<GetEmployeeSP_Result> GetEmployeeSP(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeSP_Result>("GetEmployeeSP", userIdParameter);
        }
    
        public virtual ObjectResult<GetEmployeeStatusesSP_Result> GetEmployeeStatusesSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeStatusesSP_Result>("GetEmployeeStatusesSP");
        }
    
        public virtual ObjectResult<GetNewsByIdSP_Result> GetNewsByIdSP(Nullable<int> newsId)
        {
            var newsIdParameter = newsId.HasValue ?
                new ObjectParameter("NewsId", newsId) :
                new ObjectParameter("NewsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNewsByIdSP_Result>("GetNewsByIdSP", newsIdParameter);
        }
    
        public virtual ObjectResult<GetPropertiesStatusesSP_Result> GetPropertiesStatusesSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPropertiesStatusesSP_Result>("GetPropertiesStatusesSP");
        }
    
        public virtual ObjectResult<GetPropertyAddressSP_Result> GetPropertyAddressSP(Nullable<int> propertyId)
        {
            var propertyIdParameter = propertyId.HasValue ?
                new ObjectParameter("PropertyId", propertyId) :
                new ObjectParameter("PropertyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPropertyAddressSP_Result>("GetPropertyAddressSP", propertyIdParameter);
        }
    
        public virtual ObjectResult<GetPropertyDocsSP_Result> GetPropertyDocsSP(Nullable<int> propertyId)
        {
            var propertyIdParameter = propertyId.HasValue ?
                new ObjectParameter("PropertyId", propertyId) :
                new ObjectParameter("PropertyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPropertyDocsSP_Result>("GetPropertyDocsSP", propertyIdParameter);
        }
    
        public virtual ObjectResult<GetPropertyImgsSP_Result> GetPropertyImgsSP(Nullable<int> propertyId)
        {
            var propertyIdParameter = propertyId.HasValue ?
                new ObjectParameter("PropertyId", propertyId) :
                new ObjectParameter("PropertyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPropertyImgsSP_Result>("GetPropertyImgsSP", propertyIdParameter);
        }
    
        public virtual ObjectResult<GetPropertySP_Result> GetPropertySP(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPropertySP_Result>("GetPropertySP", idParameter);
        }
    
        public virtual ObjectResult<GetPropertyTypeByIdSP_Result> GetPropertyTypeByIdSP(Nullable<int> propertyTypeId)
        {
            var propertyTypeIdParameter = propertyTypeId.HasValue ?
                new ObjectParameter("PropertyTypeId", propertyTypeId) :
                new ObjectParameter("PropertyTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPropertyTypeByIdSP_Result>("GetPropertyTypeByIdSP", propertyTypeIdParameter);
        }
    
        public virtual ObjectResult<GetPropertyTypesSP_Result> GetPropertyTypesSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPropertyTypesSP_Result>("GetPropertyTypesSP");
        }
    
        public virtual ObjectResult<GetProvinceByIdSP_Result> GetProvinceByIdSP(Nullable<int> provinceId)
        {
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProvinceByIdSP_Result>("GetProvinceByIdSP", provinceIdParameter);
        }
    
        public virtual ObjectResult<GetProvincesSP_Result> GetProvincesSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProvincesSP_Result>("GetProvincesSP");
        }
    
        public virtual ObjectResult<GetQuoteDetails_Result> GetQuoteDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuoteDetails_Result>("GetQuoteDetails");
        }
    
        public virtual ObjectResult<GetRoleByIdSP_Result> GetRoleByIdSP(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoleByIdSP_Result>("GetRoleByIdSP", roleIdParameter);
        }
    
        public virtual ObjectResult<GetRoleSP_Result> GetRoleSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoleSP_Result>("GetRoleSP");
        }
    
        public virtual ObjectResult<GetRoomByIdSP_Result> GetRoomByIdSP(Nullable<int> idRoom)
        {
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("IdRoom", idRoom) :
                new ObjectParameter("IdRoom", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoomByIdSP_Result>("GetRoomByIdSP", idRoomParameter);
        }
    
        public virtual ObjectResult<GetRoomsSP_Result> GetRoomsSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoomsSP_Result>("GetRoomsSP");
        }
    
        public virtual ObjectResult<GetStatusByIdSP_Result> GetStatusByIdSP(Nullable<int> statusId)
        {
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStatusByIdSP_Result>("GetStatusByIdSP", statusIdParameter);
        }
    
        public virtual ObjectResult<GetStatusSP_Result> GetStatusSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStatusSP_Result>("GetStatusSP");
        }
    
        public virtual ObjectResult<GetTransactionTypeByIdSP_Result> GetTransactionTypeByIdSP(Nullable<int> transactionTypeId)
        {
            var transactionTypeIdParameter = transactionTypeId.HasValue ?
                new ObjectParameter("TransactionTypeId", transactionTypeId) :
                new ObjectParameter("TransactionTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransactionTypeByIdSP_Result>("GetTransactionTypeByIdSP", transactionTypeIdParameter);
        }
    
        public virtual ObjectResult<GetTransactionTypesSP_Result> GetTransactionTypesSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransactionTypesSP_Result>("GetTransactionTypesSP");
        }
    
        public virtual ObjectResult<GetUserByIdentificationSP_Result> GetUserByIdentificationSP(string identification)
        {
            var identificationParameter = identification != null ?
                new ObjectParameter("Identification", identification) :
                new ObjectParameter("Identification", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByIdentificationSP_Result>("GetUserByIdentificationSP", identificationParameter);
        }
    
        public virtual ObjectResult<GetVendorAndAdminEmails_Result> GetVendorAndAdminEmails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVendorAndAdminEmails_Result>("GetVendorAndAdminEmails");
        }
    
        public virtual int InsertAppointmentSP(Nullable<System.DateTime> appointmentDate, Nullable<int> userId, Nullable<int> propertyId)
        {
            var appointmentDateParameter = appointmentDate.HasValue ?
                new ObjectParameter("AppointmentDate", appointmentDate) :
                new ObjectParameter("AppointmentDate", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var propertyIdParameter = propertyId.HasValue ?
                new ObjectParameter("PropertyId", propertyId) :
                new ObjectParameter("PropertyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertAppointmentSP", appointmentDateParameter, userIdParameter, propertyIdParameter);
        }
    
        public virtual int InsertAuditLogSP(Nullable<int> employeeId, string currentAudit)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var currentAuditParameter = currentAudit != null ?
                new ObjectParameter("CurrentAudit", currentAudit) :
                new ObjectParameter("CurrentAudit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertAuditLogSP", employeeIdParameter, currentAuditParameter);
        }
    
        public virtual int InsertCantonSP(string name, Nullable<int> provinceId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCantonSP", nameParameter, provinceIdParameter);
        }
    
        public virtual int InsertContactSP(Nullable<int> userId, string message)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertContactSP", userIdParameter, messageParameter);
        }
    
        public virtual int InsertCurrencySP(string name, string currencyCode, string symbol)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("CurrencyCode", currencyCode) :
                new ObjectParameter("CurrencyCode", typeof(string));
    
            var symbolParameter = symbol != null ?
                new ObjectParameter("Symbol", symbol) :
                new ObjectParameter("Symbol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCurrencySP", nameParameter, currencyCodeParameter, symbolParameter);
        }
    
        public virtual int InsertDistrictSP(string name, Nullable<int> cantonId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var cantonIdParameter = cantonId.HasValue ?
                new ObjectParameter("CantonId", cantonId) :
                new ObjectParameter("CantonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDistrictSP", nameParameter, cantonIdParameter);
        }
    
        public virtual int InsertDocumentTypeSP(string document)
        {
            var documentParameter = document != null ?
                new ObjectParameter("Document", document) :
                new ObjectParameter("Document", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDocumentTypeSP", documentParameter);
        }
    
        public virtual int InsertEmployeeSP(Nullable<int> userId, string passwordTemp, Nullable<int> role)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var passwordTempParameter = passwordTemp != null ?
                new ObjectParameter("PasswordTemp", passwordTemp) :
                new ObjectParameter("PasswordTemp", typeof(string));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmployeeSP", userIdParameter, passwordTempParameter, roleParameter);
        }
    
        public virtual int InsertNewsSP(Nullable<int> employeeId, string title, string description, string url, string imageUrl)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("ImageUrl", imageUrl) :
                new ObjectParameter("ImageUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertNewsSP", employeeIdParameter, titleParameter, descriptionParameter, urlParameter, imageUrlParameter);
        }
    
        public virtual int InsertPropertyAddressSP(Nullable<int> propertyId, Nullable<int> districtId, string otherSigns)
        {
            var propertyIdParameter = propertyId.HasValue ?
                new ObjectParameter("PropertyId", propertyId) :
                new ObjectParameter("PropertyId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var otherSignsParameter = otherSigns != null ?
                new ObjectParameter("OtherSigns", otherSigns) :
                new ObjectParameter("OtherSigns", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPropertyAddressSP", propertyIdParameter, districtIdParameter, otherSignsParameter);
        }
    
        public virtual int InsertPropertyDocSP(string name, string docUrl, Nullable<int> propertyId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var docUrlParameter = docUrl != null ?
                new ObjectParameter("DocUrl", docUrl) :
                new ObjectParameter("DocUrl", typeof(string));
    
            var propertyIdParameter = propertyId.HasValue ?
                new ObjectParameter("PropertyId", propertyId) :
                new ObjectParameter("PropertyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPropertyDocSP", nameParameter, docUrlParameter, propertyIdParameter);
        }
    
        public virtual int InsertPropertyImgSP(string imageUrl, Nullable<int> propertyId)
        {
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("ImageUrl", imageUrl) :
                new ObjectParameter("ImageUrl", typeof(string));
    
            var propertyIdParameter = propertyId.HasValue ?
                new ObjectParameter("PropertyId", propertyId) :
                new ObjectParameter("PropertyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPropertyImgSP", imageUrlParameter, propertyIdParameter);
        }
    
        public virtual int InsertPropertySP(string title, Nullable<int> employeeId, Nullable<int> currency, Nullable<decimal> price, Nullable<decimal> areaLand, Nullable<decimal> areaBuild, string description, Nullable<int> propertyType, Nullable<int> transactionType, Nullable<int> propertyStatus, ObjectParameter id)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var currencyParameter = currency.HasValue ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var areaLandParameter = areaLand.HasValue ?
                new ObjectParameter("AreaLand", areaLand) :
                new ObjectParameter("AreaLand", typeof(decimal));
    
            var areaBuildParameter = areaBuild.HasValue ?
                new ObjectParameter("AreaBuild", areaBuild) :
                new ObjectParameter("AreaBuild", typeof(decimal));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var propertyTypeParameter = propertyType.HasValue ?
                new ObjectParameter("PropertyType", propertyType) :
                new ObjectParameter("PropertyType", typeof(int));
    
            var transactionTypeParameter = transactionType.HasValue ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(int));
    
            var propertyStatusParameter = propertyStatus.HasValue ?
                new ObjectParameter("PropertyStatus", propertyStatus) :
                new ObjectParameter("PropertyStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPropertySP", titleParameter, employeeIdParameter, currencyParameter, priceParameter, areaLandParameter, areaBuildParameter, descriptionParameter, propertyTypeParameter, transactionTypeParameter, propertyStatusParameter, id);
        }
    
        public virtual int InsertPropertyTypeSP(string type, string description)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPropertyTypeSP", typeParameter, descriptionParameter);
        }
    
        public virtual int InsertProvinceSP(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProvinceSP", nameParameter);
        }
    
        public virtual int InsertQuoteDetailsPerRoomSP(Nullable<int> quoteRoomId, Nullable<int> roomQuantity)
        {
            var quoteRoomIdParameter = quoteRoomId.HasValue ?
                new ObjectParameter("QuoteRoomId", quoteRoomId) :
                new ObjectParameter("QuoteRoomId", typeof(int));
    
            var roomQuantityParameter = roomQuantity.HasValue ?
                new ObjectParameter("RoomQuantity", roomQuantity) :
                new ObjectParameter("RoomQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertQuoteDetailsPerRoomSP", quoteRoomIdParameter, roomQuantityParameter);
        }
    
        public virtual int InsertQuoteRoomSP(string roomName)
        {
            var roomNameParameter = roomName != null ?
                new ObjectParameter("RoomName", roomName) :
                new ObjectParameter("RoomName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertQuoteRoomSP", roomNameParameter);
        }
    
        public virtual int InsertQuoteSP(Nullable<int> clientId, string details)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertQuoteSP", clientIdParameter, detailsParameter);
        }
    
        public virtual int InsertRoleSP(string roleName, string description)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRoleSP", roleNameParameter, descriptionParameter);
        }
    
        public virtual int InsertStatusSP(string name, string description, string relatedTable)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var relatedTableParameter = relatedTable != null ?
                new ObjectParameter("RelatedTable", relatedTable) :
                new ObjectParameter("RelatedTable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertStatusSP", nameParameter, descriptionParameter, relatedTableParameter);
        }
    
        public virtual int InsertStatusSPTest(string name, string description, string relatedTable, ObjectParameter iDGenerado)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var relatedTableParameter = relatedTable != null ?
                new ObjectParameter("RelatedTable", relatedTable) :
                new ObjectParameter("RelatedTable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertStatusSPTest", nameParameter, descriptionParameter, relatedTableParameter, iDGenerado);
        }
    
        public virtual int InsertTransactionTypeSP(string type, string description)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTransactionTypeSP", typeParameter, descriptionParameter);
        }
    
        public virtual int InsertUserSP(Nullable<int> documentType, string identification, string name, string firstLastName, string secondLastName, string phoneNumber, string email, ObjectParameter iD)
        {
            var documentTypeParameter = documentType.HasValue ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(int));
    
            var identificationParameter = identification != null ?
                new ObjectParameter("Identification", identification) :
                new ObjectParameter("Identification", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var firstLastNameParameter = firstLastName != null ?
                new ObjectParameter("FirstLastName", firstLastName) :
                new ObjectParameter("FirstLastName", typeof(string));
    
            var secondLastNameParameter = secondLastName != null ?
                new ObjectParameter("SecondLastName", secondLastName) :
                new ObjectParameter("SecondLastName", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUserSP", documentTypeParameter, identificationParameter, nameParameter, firstLastNameParameter, secondLastNameParameter, phoneNumberParameter, emailParameter, iD);
        }
    
        public virtual ObjectResult<LoginEmployeeSP_Result> LoginEmployeeSP(string identificacion, string password)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginEmployeeSP_Result>("LoginEmployeeSP", identificacionParameter, passwordParameter);
        }
    
        public virtual int ResetPasswordSP(string identification, string password, string passwordTemp, Nullable<bool> isTemporary)
        {
            var identificationParameter = identification != null ?
                new ObjectParameter("Identification", identification) :
                new ObjectParameter("Identification", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var passwordTempParameter = passwordTemp != null ?
                new ObjectParameter("PasswordTemp", passwordTemp) :
                new ObjectParameter("PasswordTemp", typeof(string));
    
            var isTemporaryParameter = isTemporary.HasValue ?
                new ObjectParameter("IsTemporary", isTemporary) :
                new ObjectParameter("IsTemporary", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ResetPasswordSP", identificationParameter, passwordParameter, passwordTempParameter, isTemporaryParameter);
        }
    
        public virtual int UpdateAppointmentSP(Nullable<int> id, Nullable<int> status, Nullable<int> employeeId, Nullable<System.DateTime> appointmentDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var appointmentDateParameter = appointmentDate.HasValue ?
                new ObjectParameter("AppointmentDate", appointmentDate) :
                new ObjectParameter("AppointmentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAppointmentSP", idParameter, statusParameter, employeeIdParameter, appointmentDateParameter);
        }
    
        public virtual int UpdateAuditLogSP(Nullable<int> auditLogId, Nullable<int> employeeId, string currentAudit)
        {
            var auditLogIdParameter = auditLogId.HasValue ?
                new ObjectParameter("AuditLogId", auditLogId) :
                new ObjectParameter("AuditLogId", typeof(int));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var currentAuditParameter = currentAudit != null ?
                new ObjectParameter("CurrentAudit", currentAudit) :
                new ObjectParameter("CurrentAudit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAuditLogSP", auditLogIdParameter, employeeIdParameter, currentAuditParameter);
        }
    
        public virtual int UpdateCantonSP(Nullable<int> cantonId, string name, Nullable<int> provinceId, Nullable<bool> isActive)
        {
            var cantonIdParameter = cantonId.HasValue ?
                new ObjectParameter("CantonId", cantonId) :
                new ObjectParameter("CantonId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCantonSP", cantonIdParameter, nameParameter, provinceIdParameter, isActiveParameter);
        }
    
        public virtual int UpdateCurrencySP(Nullable<int> currencyId, string name, string currencyCode, string symbol)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("CurrencyCode", currencyCode) :
                new ObjectParameter("CurrencyCode", typeof(string));
    
            var symbolParameter = symbol != null ?
                new ObjectParameter("Symbol", symbol) :
                new ObjectParameter("Symbol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCurrencySP", currencyIdParameter, nameParameter, currencyCodeParameter, symbolParameter);
        }
    
        public virtual int UpdateDistrictSP(Nullable<int> districtId, string name, Nullable<int> cantonId, Nullable<bool> isActive)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var cantonIdParameter = cantonId.HasValue ?
                new ObjectParameter("CantonId", cantonId) :
                new ObjectParameter("CantonId", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDistrictSP", districtIdParameter, nameParameter, cantonIdParameter, isActiveParameter);
        }
    
        public virtual int UpdateDocumentTypeSP(Nullable<int> id, string document, Nullable<bool> isActive)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var documentParameter = document != null ?
                new ObjectParameter("Document", document) :
                new ObjectParameter("Document", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDocumentTypeSP", idParameter, documentParameter, isActiveParameter);
        }
    
        public virtual int UpdateEmployeeImgSP(Nullable<int> userId, string imageProfile)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var imageProfileParameter = imageProfile != null ?
                new ObjectParameter("ImageProfile", imageProfile) :
                new ObjectParameter("ImageProfile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmployeeImgSP", userIdParameter, imageProfileParameter);
        }
    
        public virtual int UpdateEmployeeSP(Nullable<int> employeeId, string phoneNumber, string email, Nullable<int> role, Nullable<int> status)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmployeeSP", employeeIdParameter, phoneNumberParameter, emailParameter, roleParameter, statusParameter);
        }
    
        public virtual int UpdateNewsSP(Nullable<int> newsId, Nullable<int> employeeId, string title, string description, string url, string imageUrl)
        {
            var newsIdParameter = newsId.HasValue ?
                new ObjectParameter("NewsId", newsId) :
                new ObjectParameter("NewsId", typeof(int));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("ImageUrl", imageUrl) :
                new ObjectParameter("ImageUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateNewsSP", newsIdParameter, employeeIdParameter, titleParameter, descriptionParameter, urlParameter, imageUrlParameter);
        }
    
        public virtual int UpdatePropertyAddressSP(Nullable<int> id, Nullable<int> propertyId, Nullable<int> districtId, string otherSigns)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var propertyIdParameter = propertyId.HasValue ?
                new ObjectParameter("PropertyId", propertyId) :
                new ObjectParameter("PropertyId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var otherSignsParameter = otherSigns != null ?
                new ObjectParameter("OtherSigns", otherSigns) :
                new ObjectParameter("OtherSigns", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePropertyAddressSP", idParameter, propertyIdParameter, districtIdParameter, otherSignsParameter);
        }
    
        public virtual int UpdatePropertyDocSP(Nullable<int> id, string name, string docUrl, Nullable<int> propertyId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var docUrlParameter = docUrl != null ?
                new ObjectParameter("DocUrl", docUrl) :
                new ObjectParameter("DocUrl", typeof(string));
    
            var propertyIdParameter = propertyId.HasValue ?
                new ObjectParameter("PropertyId", propertyId) :
                new ObjectParameter("PropertyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePropertyDocSP", idParameter, nameParameter, docUrlParameter, propertyIdParameter);
        }
    
        public virtual int UpdatePropertyImgSP(Nullable<int> id, string imageUrl, Nullable<int> propertyId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("ImageUrl", imageUrl) :
                new ObjectParameter("ImageUrl", typeof(string));
    
            var propertyIdParameter = propertyId.HasValue ?
                new ObjectParameter("PropertyId", propertyId) :
                new ObjectParameter("PropertyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePropertyImgSP", idParameter, imageUrlParameter, propertyIdParameter);
        }
    
        public virtual int UpdatePropertySP(Nullable<int> id, string title, Nullable<int> employeeId, Nullable<int> currency, Nullable<decimal> price, Nullable<decimal> areaLand, Nullable<decimal> areaBuild, string description, Nullable<int> propertyType, Nullable<int> transactionType, Nullable<int> propertyStatus)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var currencyParameter = currency.HasValue ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var areaLandParameter = areaLand.HasValue ?
                new ObjectParameter("AreaLand", areaLand) :
                new ObjectParameter("AreaLand", typeof(decimal));
    
            var areaBuildParameter = areaBuild.HasValue ?
                new ObjectParameter("AreaBuild", areaBuild) :
                new ObjectParameter("AreaBuild", typeof(decimal));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var propertyTypeParameter = propertyType.HasValue ?
                new ObjectParameter("PropertyType", propertyType) :
                new ObjectParameter("PropertyType", typeof(int));
    
            var transactionTypeParameter = transactionType.HasValue ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(int));
    
            var propertyStatusParameter = propertyStatus.HasValue ?
                new ObjectParameter("PropertyStatus", propertyStatus) :
                new ObjectParameter("PropertyStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePropertySP", idParameter, titleParameter, employeeIdParameter, currencyParameter, priceParameter, areaLandParameter, areaBuildParameter, descriptionParameter, propertyTypeParameter, transactionTypeParameter, propertyStatusParameter);
        }
    
        public virtual int UpdatePropertyTypeSP(Nullable<int> id, string type, string description, Nullable<bool> isActive)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePropertyTypeSP", idParameter, typeParameter, descriptionParameter, isActiveParameter);
        }
    
        public virtual int UpdateProvinceSP(Nullable<int> provinceId, string name, Nullable<bool> isActive)
        {
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProvinceSP", provinceIdParameter, nameParameter, isActiveParameter);
        }
    
        public virtual int UpdateQuoteRoomSP(Nullable<int> id, string roomName, Nullable<bool> isActive)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var roomNameParameter = roomName != null ?
                new ObjectParameter("RoomName", roomName) :
                new ObjectParameter("RoomName", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateQuoteRoomSP", idParameter, roomNameParameter, isActiveParameter);
        }
    
        public virtual int UpdateRoleSP(Nullable<int> roleId, string nuevoRoleName, string nuevaDescripcion, Nullable<bool> isActive)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var nuevoRoleNameParameter = nuevoRoleName != null ?
                new ObjectParameter("NuevoRoleName", nuevoRoleName) :
                new ObjectParameter("NuevoRoleName", typeof(string));
    
            var nuevaDescripcionParameter = nuevaDescripcion != null ?
                new ObjectParameter("NuevaDescripcion", nuevaDescripcion) :
                new ObjectParameter("NuevaDescripcion", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRoleSP", roleIdParameter, nuevoRoleNameParameter, nuevaDescripcionParameter, isActiveParameter);
        }
    
        public virtual int UpdateStatusSP(Nullable<int> id, string name, string description, string relatedTable, Nullable<bool> isActive)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var relatedTableParameter = relatedTable != null ?
                new ObjectParameter("RelatedTable", relatedTable) :
                new ObjectParameter("RelatedTable", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStatusSP", idParameter, nameParameter, descriptionParameter, relatedTableParameter, isActiveParameter);
        }
    
        public virtual int UpdateTransactionTypeSP(Nullable<int> id, string type, string description, Nullable<bool> isAactive)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isAactiveParameter = isAactive.HasValue ?
                new ObjectParameter("IsAactive", isAactive) :
                new ObjectParameter("IsAactive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransactionTypeSP", idParameter, typeParameter, descriptionParameter, isAactiveParameter);
        }
    
        public virtual int UpdateUrlImgSP(Nullable<int> id, string imageUrl)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("ImageUrl", imageUrl) :
                new ObjectParameter("ImageUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUrlImgSP", idParameter, imageUrlParameter);
        }
    
        public virtual int UpdateUserSP(Nullable<int> userId, Nullable<int> documentType, string identification, string name, string firstLastName, string secondLastName, string phoneNumber, string email)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var documentTypeParameter = documentType.HasValue ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(int));
    
            var identificationParameter = identification != null ?
                new ObjectParameter("Identification", identification) :
                new ObjectParameter("Identification", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var firstLastNameParameter = firstLastName != null ?
                new ObjectParameter("FirstLastName", firstLastName) :
                new ObjectParameter("FirstLastName", typeof(string));
    
            var secondLastNameParameter = secondLastName != null ?
                new ObjectParameter("SecondLastName", secondLastName) :
                new ObjectParameter("SecondLastName", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserSP", userIdParameter, documentTypeParameter, identificationParameter, nameParameter, firstLastNameParameter, secondLastNameParameter, phoneNumberParameter, emailParameter);
        }
    }
}
