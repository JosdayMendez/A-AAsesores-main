@model A_AAsesoresWeb.Entities.AppointmentEnt
@{
    ViewBag.Title = "ConsultAppointment";
}

<div class="container-fluid">

    <div class="row align-items-center">
        <div class="col-sm-6">
            <div class="page-title-box">
                <div class="d-flex justify-content-start align-items-center my-3">
                    <div class="mr-2">
                        <div class="round">
                            <i class="fa fa-calendar"></i>
                        </div>
                    </div>
                    <div>
                        <h3 class="mt-0 mb-0">Actualizar Cita</h3>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (ViewBag.MensajeUsuario != null)
    {
        <div class="alert alert-danger" role="alert" style="text-align:center">
            @ViewBag.MensajeUsuario
        </div>
    }
    <div class="row">
        <div class="col-12">
            <div class="card m-b-30">
                <div class="card-body">
                    @if (ViewBag.MensajeUsuario != null)
                    {
                        <div class="alert alert-danger" role="alert" style="text-align:center">
                            @ViewBag.MensajeUsuario
                        </div>
                    }
                    @using (Html.BeginForm("UpdateAppointment", "Appointments", FormMethod.Post, new { @class = "bg-white p-5 contact-form", data_parsley_validate = "true", id = "UpdateAppointmentForm" }))
                    {
                        @Html.HiddenFor(m => m.Id)
                        <div class="row">
                            <div class="col-md-6">
                                <div class="p-1">

                                    <div class="form-group">
                                        <label>Número de identificación del usuario <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Contiene la identificación del usuario solicitante"></i> </label>
                                        @Html.TextBoxFor(m => m.IdentificationUser, new { @readonly = "@readonly", @class = "form-control" })
                                    </div>

                                    <div class="form-group">
                                        <label>Teléfono del solicitante <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Contiene el número telefónico del usuario solicitante."></i> </label>
                                        @Html.TextBoxFor(m => m.Phonenumber, new { @class = "form-control", @type = "text", @readonly = "@readonly" })
                                    </div>

                                    <div class="form-group">
                                        <label>Empleado asignado <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Se debe seleccionar el empleado que asistira a la cita con el cliente."></i> </label>
                                        @Html.DropDownListFor(m => m.EmployeeId, ViewBag.EmployeeList as List<SelectListItem>, new { @class = "form-control", required = "required", @data_parsley_required = "true", @data_parsley_error_message = "Por favor, seleccione el empleado que va a atender la cita." })
                                    </div>

                                    <div class="form-group">
                                        <label>Nombre de la propiedad que se va a visitar <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Contiene el nombre de la propiedad que se va a visitar"></i> </label>
                                        @Html.TextBoxFor(m => m.PropertyName, new { @class = "form-control", @type = "text", @readonly = "@readonly" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="p-1">

                                    <div class="form-group">
                                        <label>Nombre del cliente <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Contiene el nombre del cliente que registro la visita"></i> </label>
                                        @Html.TextBoxFor(m => m.UserName, new { @readonly = "@readonly", @class = "form-control" })
                                    </div>

                                    <div class="form-group">
                                        <label for="FirstLastName">Correo electrónico</label>
                                        @Html.TextBoxFor(m => m.Email, new { @readonly = "@readonly", @class = "form-control", @type = "text", @style = "font-size:14px;" })
                                    </div>

                                    <div class="form-group">
                                        <label>Estado del la cita <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Se selecciona el estado de la visita."></i></label>
                                        @Html.DropDownListFor(m => m.Status, ViewBag.ListStatus as List<SelectListItem>, new { @class = "form-control", required = "required", @data_parsley_required = "true", @data_parsley_error_message = "Por favor, seleccione el estado de la cita." })

                                    </div>
                                    <div class="form-group">
                                        <label>
                                            Fecha y hora de la visita
                                            <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Presenta la fecha y hora que se coordino la cita"></i>
                                        </label>
                                        @Html.TextBoxFor(m => m.AppointmentDate, new
                                        {
                                            @class = "form-control",
                                            @type = "datetime-local",
                                            @Value = Model.AppointmentDate != null ? Model.AppointmentDate.ToString("yyyy-MM-ddTHH:mm") : "No disponible"
                                        })
                                    </div>



                                </div>
                            </div> <!-- end col -->
                            <div class="col-12">
                                <div class="form-group text-right">

                                    <a href="@Url.Action("ConsultAppointments", "Appointments")" class="btn btn-secondary waves-effect m-l-5">Cancelar</a>
                                    <input type="submit" class="btn btn-primary waves-light" value="Actualizar cita">
                                </div>
                            </div>
                        </div> <!-- end row -->
                    }
                </div>
            </div>
        </div> <!-- end col -->
    </div> <!-- end row -->
</div> <!-- end container -->

@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/parsley.js/2.9.2/parsley.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- App js -->
    <script src="~/assets/js/app.js"></script>

    <script>
    $(document).ready(function () {
        $('#UpdateAppointmentForm').parsley();
        // Envío del formulario a través de AJAX
        $('#UpdateAppointmentForm').submit(function (event) {
            event.preventDefault();
            var formData = new FormData(this);
            $.ajax({
                url: $(this).attr('action'),
                type: $(this).attr('method'),
                data: formData,
                processData: false, // No procesar los datos
                contentType: false,
                success: function (response) {
                    var responseParts = response.message.split("|");
                    if (response.success) {
                        Swal.fire({
                            title: 'Éxito',
                            text: responseParts[0],
                            icon: responseParts[1],
                            confirmButtonText: 'Aceptar',
                            allowOutsideClick: false,
                            allowEscapeKey: false
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '@Url.Action("ConsultAppointments", "Appointments")';
                            }
                        });
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: responseParts[0],
                            icon: responseParts[1],
                            confirmButtonText: 'Aceptar',
                            allowOutsideClick: false,
                            allowEscapeKey: false
                        });
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = xhr.responseJSON ? xhr.responseJSON.message : 'Error al agregar la pregunta.';
                    Swal.fire({
                        title: 'Error',
                        text: errorMessage,
                        icon: 'error',
                        confirmButtonText: 'Aceptar',
                        allowOutsideClick: false,
                        allowEscapeKey: false
                    });
                }
            });
        });
    });
    </script>

}
