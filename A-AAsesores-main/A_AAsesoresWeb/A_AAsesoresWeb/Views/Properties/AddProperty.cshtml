@model A_AAsesoresWeb.Entities.PropertyEnt
@{
    ViewBag.Title = "AddPropety";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/assets/plugins/morris/morris.css" rel="stylesheet">
<link rel="stylesheet" href="https://unpkg.com/dropzone@5/dist/min/dropzone.min.css" type="text/css" />
<link href="~/assets/plugins/dropify/css/dropify.min.css" rel="stylesheet">

<div class="container-fluid">
    <!-- Page-Title -->
    <div class="row">
        <div class="col-md-12 col-lg-12">
            <div class="page-title-box">
                <div class="d-flex justify-content-start align-items-center my-3">
                    <div class="mr-2">
                        <div class="round">
                            <i class="fa fa-home"></i>
                        </div>
                    </div>
                    <div>
                        <h3 class="mt-0 mb-0">Registrar Propiedad</h3>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="card m-b-30">
                <div class="card-body">

                    @using (Html.BeginForm("AddProperty", "Properties", FormMethod.Post, new { @class = "bg-white contact-form", @enctype = "multipart/form-data", id = "PropertyForm", @data_parsley_validate = "true" }))
                    {
                        <div class="card-body">
                            <div class="row">
                                <div class="col-sm-6 col-md-6 col-lg-6">
                                    <div class="p-1">
                                        <div class="form-group">
                                            <label>Nombre de la propiedad <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Este es el título con el que se mostrará la propiedad."></i></label>
                                            @Html.TextBoxFor(m => m.Title, new { @class = "form-control", @type = "text", @placeholder = "Titulo de la propiedad", @data_parsley_required = "true", @data_parsley_error_message = "Por favor digite el título." })
                                        </div>

                                        @if (Session["Role"].ToString().AsInt() == 2)
                                        {
                                            <div class="form-group">
                                                <label>Asesor <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Seleccione el asesor a cargo de la propiedad."></i></label>
                                                @Html.DropDownListFor(m => m.EmployeeId, ViewBag.Employees as List<SelectListItem>, new { @class = "form-control", @required = "required", @readonly = "readonly", @data_parsley_required = "true", @data_parsley_error_message = "Por favor seleccione el asesor.", @style = "pointer-events: none;" })
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="form-group">
                                                <label>Asesor <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Seleccione el asesor a cargo de la propiedad."></i></label>
                                                @Html.DropDownListFor(m => m.EmployeeId, ViewBag.Employees as List<SelectListItem>, new { @class = "form-control", required = "required", @data_parsley_required = "true", @data_parsley_error_message = "Por favor seleccione el asesor." })
                                            </div>
                                        }

                                        <div class="form-group">
                                            <label>Precio de la Propiedad <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Seleccione la moneda y digite el precio."></i></label>
                                            <div class="row mb-3">
                                                <div class="col-md-2">
                                                    @Html.DropDownListFor(m => m.Currency, ViewBag.Currencies as List<SelectListItem>, new { @class = "form-control", required = "required", @data_parsley_required = "true", @data_parsley_error_message = "Por favor seleccione la moneda de esta propiedad." })
                                                </div>
                                                <div class="col-md-10">
                                                    @Html.TextBoxFor(m => m.Price, new { @class = "form-control number", @id = "PropertyPrice", @type = "number", @placeholder = "Ingrese el monto", @aria_label = "Precio", @aria_describedby = "basic-addon1", @min = 0, @data_parsley_required = "true", @data_parsley_error_message = "Por favor digite un precio." })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label>Metros Cuadrados Terreno (m²) <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Medida total del terreno."></i></label>
                                            @Html.TextBoxFor(m => m.AreaLand, new { @class = "form-control number", @type = "text", @placeholder = "Ingrese la medida", @min = 0, @data_parsley_required = "true", @data_parsley_error_message = "Por favor digite la medida." })
                                        </div>

                                        <div class="form-group">
                                            <label>Metros cuadrados de Construcción (m²) <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Medida construída."></i></label>
                                            @Html.TextBoxFor(m => m.AreaBuild, new { @class = "form-control number", @type = "text", @placeholder = "Ingrese la medida", @min = 0, @data_parsley_required = "true", @data_parsley_error_message = "Por favor digite la medida." })
                                        </div>

                                        <div class="form-group">
                                            <label>Descripción de la Propiedad <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Ingrese cualquier otro dato relevante respecto a la propiedad."></i></label>
                                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @rows = "5", @placeholder = "Ingrese la descripción de la propiedad", @data_parsley_required = "true", @data_parsley_error_message = "Por favor digite la descripción." })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-6 col-lg-6">
                                    <div class="p-1">
                                        <div class="form-group">
                                            <label>Tipo de Propiedad <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Seleccione el tipo de uso de la propiedad."></i></label>
                                            @Html.DropDownListFor(m => m.PropertyType, ViewBag.PropertyTypes as List<SelectListItem>, new { @class = "form-control", required = "required", @data_parsley_required = "true", @data_parsley_error_message = "Por favor seleccione el tipo de propiedad." })
                                        </div>

                                        <div class="form-group">
                                            <label>Tipo de transacción <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Seleccione el tipo de transacción a realizar con el terreno."></i></label>
                                            @Html.DropDownListFor(m => m.TransactionType, ViewBag.TransactionTypes as List<SelectListItem>, new { @class = "form-control", required = "required", @data_parsley_required = "true", @data_parsley_error_message = "Por favor seleccione el tipo de transacción." })
                                        </div>
                                        @*
                                            <div class="form-group">
                                                <label>Estado de la propiedad</label>
                                                @Html.DropDownListFor(m => m.PropertyStatus, ViewBag.Statuses as List<SelectListItem>, new { @class = "form-control", required = "required" })
                                            </div>
                                        *@

                                        <div class="form-group">
                                            <label>Provincia <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Seleccione la provincia."></i></label>
                                            @Html.DropDownListFor(m => m.Province, ViewBag.Provinces as List<SelectListItem>, new { @class = "form-control", required = "required", id = "ProvinceId", @data_parsley_required = "true", @data_parsley_error_message = "Por favor seleccione la provincia." })
                                        </div>

                                        <div class="form-group">
                                            <label>Cantón <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Seleccione el cantón."></i></label>
                                            @Html.DropDownListFor(m => m.Canton, ViewBag.Cantones as List<SelectListItem>, new { @class = "form-control", required = "required", id = "CantonId", @data_parsley_required = "true", @data_parsley_error_message = "Por favor seleccione el cantón." })
                                        </div>

                                        <div class="form-group">
                                            <label>Distrito <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Seleccione el distrito."></i></label>
                                            @Html.DropDownListFor(m => m.District, ViewBag.Districts as List<SelectListItem>, new { @class = "form-control", required = "required", id = "DistrictId", @data_parsley_required = "true", @data_parsley_error_message = "Por favor seleccione el distrito." })
                                        </div>

                                        <div class="form-group">
                                            <label>Otros detalles de la ubicación <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Por favor brinde cualquier otro detalle relevante de la ubicación."></i></label>
                                            @Html.TextAreaFor(m => m.OtherSigns, new { @class = "form-control", @rows = "5", @type = "text", @placeholder = "Ubicación de la Propiedad", @data_parsley_required = "true", @data_parsley_error_message = "Por favor digite los detalles adicionales de la ubicación." })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Imágenes <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Debe agregar al menos una imagen a la propiedad."></i></label>
                                @Html.TextBoxFor(m => m.Images, new { @class = "dropify", @type = "file", @id = "input-file-now-img", multiple = "multiple", accept = "image/jpeg, image/png", @data_parsley_required = "true", @data_parsley_error_message = "Por favor seleccione al menos una imagen." })
                            </div>

                            <div class="form-group">
                                <label>Documentos <i class="fa fa-info-circle fa-1x" data-toggle="tooltip" data-placement="top" title="Ingrese documentos relacionados con esta propiedad."></i></label>
                                @Html.TextBoxFor(m => m.Docs, new { @class = "dropify", @type = "file", @id = "input-file-now", multiple = "multiple" })

                            </div>
                            <div class="text-right">
                                <a href="@Url.Action("ListProperties", "Properties")" class="btn btn-secondary waves-effect m-l-5">Cancelar</a>
                                <input type="submit" class="btn btn-primary waves-light" value="Registrar Propiedad">
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div> <!-- end col -->
</div> <!-- end row -->

@section scripts{
    <script src="~/Utilities/PropertiesFunctions.js"></script>
    <!-- Dropzone js -->
    <script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"></script>
    <script src="~/assets/plugins/dropify/js/dropify.min.js"></script>
    <!-- JS para validaciones -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/parsley.js/2.9.2/parsley.min.js"></script>
    <script src="https://unpkg.com/imask"></script>
    <!-- Sweetalert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/assets/js/app.js"></script>
    <script>
        $(document).ready(function () {
            // Translated
            $('.dropify').dropify({
                messages: {
                    default: 'Arrastra y suelta un archivo aquí o haz clic',
                    replace: 'Arrastra y suelta o haz clic para reemplazar',
                    remove: 'Eliminar',
                    error: 'Se produjo un error al cargar el archivo'
                }
            });

            // Used events
            var drEvent = $('#input-file-events').dropify();

            drEvent.on('dropify.beforeClear', function (event, element) {
                return confirm("¿Realmente quiere eliminar \"" + element.file.name + "\" ?");
            });

            drEvent.on('dropify.afterClear', function (event, element) {
                alert('Archvio eliminado');
            });

            drEvent.on('dropify.errors', function (event, element) {
                console.log('Has Errors');
            });

            var drDestroy = $('#input-file-to-destroy').dropify();
            drDestroy = drDestroy.data('dropify')
            $('#toggleDropify').on('click', function (e) {
                e.preventDefault();
                if (drDestroy.isDropified()) {
                    drDestroy.destroy();
                } else {
                    drDestroy.init();
                }
            })

        });
    </script>

    <script>
        $('#PropertyForm').parsley();

        $("#PropertyForm").submit(function (event) {
            event.preventDefault();
            var formData = new FormData(this);
            $.ajax({
                url: $(this).attr('action'),
                type: $(this).attr('method'),
                data: formData,
                processData: false, // No procesar los datos
                contentType: false,
                success: function (response) {
                    var responseParts = response.message.split("|");
                    if (response.success) {
                        Swal.fire({
                            title: 'Éxito',
                            text: responseParts[0],
                            icon: responseParts[1],
                            confirmButtonText: 'Aceptar',
                            allowOutsideClick: false,
                            allowEscapeKey: false
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '@Url.Action("ListProperties", "Properties")';
                            }
                        });
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: responseParts[0],
                            icon: responseParts[1],
                            confirmButtonText: 'Aceptar',
                            allowOutsideClick: false,
                            allowEscapeKey: false
                        });
                    }
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        title: 'Error',
                        text: 'Error al agregar la propiedad.',
                        icon: 'error',
                        confirmButtonText: 'Aceptar',
                        allowOutsideClick: false,
                        allowEscapeKey: false
                    });
                }
            });
        });
    </script>
}
